{"ast":null,"code":"var _jsxFileName = \"/Users/pouyarajabi/TicketingSystem/FrontEnd/src/Component/CreateTickets/CreateTicketsFile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTicketsFile() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Get the logged-in user's ID from the JWT token\n  const token = localStorage.getItem('authToken');\n  const userId = token ? jwtDecode(token).id : null;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userId) {\n      setMessage('Error: User not logged in.');\n      return;\n    }\n\n    // Data to be sent to the backend\n    const ticketData = {\n      amount: parseFloat(amount),\n      description: description,\n      user: {\n        id: userId\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:8080/tickets/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}` // Pass the token if required by backend\n        },\n        body: JSON.stringify(ticketData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setMessage(`Ticket submitted successfully! Ticket ID: ${result.id}`);\n      } else {\n        const error = await response.text();\n        setMessage(`Error: ${error}`);\n      }\n    } catch (error) {\n      setMessage('Error: Unable to submit the ticket.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-ticket-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit a Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateTicketsFile, \"YcN5dWRm2VNld9GHu+pZzavVYoQ=\");\n_c = CreateTicketsFile;\nexport default CreateTicketsFile;\nvar _c;\n$RefreshReg$(_c, \"CreateTicketsFile\");","map":{"version":3,"names":["React","useState","jwtDecode","jsxDEV","_jsxDEV","CreateTicketsFile","_s","amount","setAmount","description","setDescription","message","setMessage","token","localStorage","getItem","userId","id","handleSubmit","e","preventDefault","ticketData","parseFloat","user","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","result","json","error","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/pouyarajabi/TicketingSystem/FrontEnd/src/Component/CreateTickets/CreateTicketsFile.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nfunction CreateTicketsFile() {\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Get the logged-in user's ID from the JWT token\n  const token = localStorage.getItem('authToken');\n  const userId = token ? jwtDecode(token).id : null;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!userId) {\n      setMessage('Error: User not logged in.');\n      return;\n    }\n\n    // Data to be sent to the backend\n    const ticketData = {\n      amount: parseFloat(amount),\n      description: description,\n      user: { id: userId },\n    };\n\n    try {\n      const response = await fetch('http://localhost:8080/tickets/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`, // Pass the token if required by backend\n        },\n        body: JSON.stringify(ticketData),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        setMessage(`Ticket submitted successfully! Ticket ID: ${result.id}`);\n      } else {\n        const error = await response.text();\n        setMessage(`Error: ${error}`);\n      }\n    } catch (error) {\n      setMessage('Error: Unable to submit the ticket.');\n    }\n  };\n\n  return (\n    <div className='create-ticket-container'>\n      <h2>Submit a Ticket</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"amount\">Amount:</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"description\">Description:</label>\n          <textarea\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          ></textarea>\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default CreateTicketsFile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}