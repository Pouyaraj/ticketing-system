{"ast":null,"code":"var _jsxFileName = \"/Users/pouyarajabi/ticketing-system/FrontEnd/src/Component/ViewTickets/ViewTicketsFile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./ViewTicketsFile.css\";\n// Define the interface for the ticket data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewTicketsFile() {\n  _s();\n  // State to hold the list of tickets\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/tickets/get-tickets'); // Replace with your backend URL\n        if (!response.ok) {\n          throw new Error('Failed to fetch tickets');\n        }\n        const data = await response.json(); // Parse the response data\n        setTickets(data); // Update tickets state with the fetched data\n      } catch (err) {\n        setError('Failed to fetch tickets');\n        console.error(err);\n      } finally {\n        setLoading(false); // Hide loading after fetching\n      }\n    };\n    fetchTickets();\n  }, []); // Empty dependency array to run only once when component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading, error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, ticket.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewTicketsFile, \"8RaUHPAPmOWpaZp4hASiN7Ep6XU=\");\n_c = ViewTicketsFile;\nexport default ViewTicketsFile;\nvar _c;\n$RefreshReg$(_c, \"ViewTicketsFile\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ViewTicketsFile","_s","tickets","setTickets","loading","setLoading","error","setError","fetchTickets","response","fetch","ok","Error","data","json","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ticket","id","description","amount","status","_c","$RefreshReg$"],"sources":["/Users/pouyarajabi/ticketing-system/FrontEnd/src/Component/ViewTickets/ViewTicketsFile.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./ViewTicketsFile.css\"\n// Define the interface for the ticket data\ninterface Ticket {\n  id: number;\n  description: string;\n  amount: number;\n  status: string;\n}\n\nfunction ViewTicketsFile() {\n  // State to hold the list of tickets\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/tickets/get-tickets'); // Replace with your backend URL\n        if (!response.ok) {\n          throw new Error('Failed to fetch tickets');\n        }\n\n        const data: Ticket[] = await response.json(); // Parse the response data\n        setTickets(data); // Update tickets state with the fetched data\n      } catch (err) {\n        setError('Failed to fetch tickets');\n        console.error(err);\n      } finally {\n        setLoading(false); // Hide loading after fetching\n      }\n    };\n\n    fetchTickets();\n  }, []); // Empty dependency array to run only once when component mounts\n\n  return (\n    <div>\n      <h1>View Tickets</h1>\n\n      {loading}\n      {error && <p>{error}</p>}\n\n      {!loading && !error && (\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Description</th>\n              <th>Amount</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tickets.map((ticket) => (\n              <tr key={ticket.id}>\n                <td>{ticket.id}</td>\n                <td>{ticket.description}</td>\n                <td>{ticket.amount}</td>\n                <td>{ticket.status}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default ViewTicketsFile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,uBAAuB;AAC9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC,CAAC,CAAC;QAC3E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;QAEA,MAAMC,IAAc,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9CX,UAAU,CAACU,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZR,QAAQ,CAAC,yBAAyB,CAAC;QACnCS,OAAO,CAACV,KAAK,CAACS,GAAG,CAAC;MACpB,CAAC,SAAS;QACRV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACET,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpBjB,OAAO,EACPE,KAAK,iBAAIP,OAAA;MAAAkB,QAAA,EAAIX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvB,CAACjB,OAAO,IAAI,CAACE,KAAK,iBACjBP,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,eACElB,OAAA;UAAAkB,QAAA,gBACElB,OAAA;YAAAkB,QAAA,EAAI;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACXtB,OAAA;YAAAkB,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBtB,OAAA;YAAAkB,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACftB,OAAA;YAAAkB,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRtB,OAAA;QAAAkB,QAAA,EACGf,OAAO,CAACoB,GAAG,CAAEC,MAAM,iBAClBxB,OAAA;UAAAkB,QAAA,gBACElB,OAAA;YAAAkB,QAAA,EAAKM,MAAM,CAACC;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBtB,OAAA;YAAAkB,QAAA,EAAKM,MAAM,CAACE;UAAW;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7BtB,OAAA;YAAAkB,QAAA,EAAKM,MAAM,CAACG;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBtB,OAAA;YAAAkB,QAAA,EAAKM,MAAM,CAACI;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAJjBE,MAAM,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CA1DQD,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AA4DxB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}